// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomBookings.Rooms.SqlServer;

#nullable disable

namespace RoomBookings.Rooms.SqlServer.Migrations
{
    [DbContext(typeof(RoomsDbContext))]
    partial class RoomsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoomBookings.Rooms.Domain.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("RoomBookings.Rooms.Domain.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("RoomBookings.Rooms.Domain.Booking", b =>
                {
                    b.HasOne("RoomBookings.Rooms.Domain.Room", null)
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("RoomBookings.Rooms.Domain.Room", b =>
                {
                    b.OwnsMany("RoomBookings.Rooms.Domain.Bed", "Beds", b1 =>
                        {
                            b1.Property<int>("RoomId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("BedType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomId", "Id");

                            b1.ToTable("Rooms");

                            b1.ToJson("Beds");

                            b1.WithOwner()
                                .HasForeignKey("RoomId");
                        });

                    b.OwnsOne("RoomBookings.Rooms.Domain.RoomFeatures", "RoomFeatures", b1 =>
                        {
                            b1.Property<int>("RoomId")
                                .HasColumnType("int");

                            b1.Property<bool>("AllowPets")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasAirCon")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasFreeParking")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasTv")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasWifi")
                                .HasColumnType("bit");

                            b1.HasKey("RoomId");

                            b1.ToTable("Rooms");

                            b1.WithOwner()
                                .HasForeignKey("RoomId");
                        });

                    b.Navigation("Beds");

                    b.Navigation("RoomFeatures")
                        .IsRequired();
                });

            modelBuilder.Entity("RoomBookings.Rooms.Domain.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
